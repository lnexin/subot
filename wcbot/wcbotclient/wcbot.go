// Code generated by goctl. DO NOT EDIT.
// Source: wcbot.proto

package wcbotclient

import (
	"context"

	"su-wcbot/wcbot/wcbot"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = wcbot.Request
	Response = wcbot.Response

	Wcbot interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultWcbot struct {
		cli zrpc.Client
	}
)

func NewWcbot(cli zrpc.Client) Wcbot {
	return &defaultWcbot{
		cli: cli,
	}
}

func (m *defaultWcbot) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := wcbot.NewWcbotClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
